# Copyright 2020 the Exposure Notifications Server authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Builds a container image.
#
timeout: '1200s'
options:
  # N1_HIGHCPU_32 builds faster, but takes much longer to provision.
  machineType: 'N1_HIGHCPU_8'
  env:
  - 'GOPATH=/go'
  - 'GO111MODULE=on'
  - 'GOPROXY=https://proxy.golang.org,direct'
  - 'CGO_ENABLED=0'
  - 'GOOS=linux'
  - 'GOARCH=amd64'

substitutions:
  _BINAUTHZ_ATTESTOR:
  _BINAUTHZ_KEY_VERSION:
  _GO_TAGS: google
  _REPO: 'github.com/google/exposure-notifications-server'
  _TAG:

steps:
#
# build all binaries at once
#
- id: 'mkdir-bin'
  name: 'bash:5'
  args:
  - 'mkdir'
  - 'bin'

- id: 'build'
  name: 'golang:1.19'
  args:
  - 'go'
  - 'build'
  - '-tags=${_GO_TAGS}'
  - '-trimpath'
  - '-ldflags=-s -w -X=${_REPO}/internal/buildinfo.BuildID=${BUILD_ID} -X=${_REPO}/internal/buildinfo.BuildTag=${_TAG} -extldflags=-static'
  - '-o=./bin/'
  - './cmd/...'
  waitFor:
  - 'mkdir-bin'

#
# admin-console
#
- id: 'dockerize-admin-console'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/admin-console:${_TAG}'
  - '--build-arg=SERVICE=admin-console'
  - '.'
  waitFor:
  - 'build'

- id: 'push-admin-console'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/admin-console:${_TAG}'
  waitFor:
  - 'dockerize-admin-console'

- id: 'attest-admin-console'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/admin-console:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-admin-console'

#
# backup
#
- id: 'dockerize-backup'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/backup:${_TAG}'
  - '--build-arg=SERVICE=backup'
  - '.'
  waitFor:
  - 'build'

- id: 'push-backup'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/backup:${_TAG}'
  waitFor:
  - 'dockerize-backup'

- id: 'attest-backup'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/backup:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-backup'

#
# cleanup-export
#
- id: 'dockerize-cleanup-export'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/cleanup-export:${_TAG}'
  - '--build-arg=SERVICE=cleanup-export'
  - '.'
  waitFor:
  - 'build'

- id: 'push-cleanup-export'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/cleanup-export:${_TAG}'
  waitFor:
  - 'dockerize-cleanup-export'

- id: 'attest-cleanup-export'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/cleanup-export:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-cleanup-export'

#
# cleanup-exposure
#
- id: 'dockerize-cleanup-exposure'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/cleanup-exposure:${_TAG}'
  - '--build-arg=SERVICE=cleanup-exposure'
  - '.'
  waitFor:
  - 'build'

- id: 'push-cleanup-exposure'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/cleanup-exposure:${_TAG}'
  waitFor:
  - 'dockerize-cleanup-exposure'

- id: 'attest-cleanup-exposure'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/cleanup-exposure:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-cleanup-exposure'

#
# debugger
#
- id: 'dockerize-debugger'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/debugger:${_TAG}'
  - '--build-arg=SERVICE=debugger'
  - '.'
  waitFor:
  - 'build'

- id: 'push-debugger'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/debugger:${_TAG}'
  waitFor:
  - 'dockerize-debugger'

- id: 'attest-debugger'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/debugger:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-debugger'

#
# export
#
- id: 'dockerize-export'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/export:${_TAG}'
  - '--build-arg=SERVICE=export'
  - '.'
  waitFor:
  - 'build'

- id: 'push-export'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/export:${_TAG}'
  waitFor:
  - 'dockerize-export'

- id: 'attest-export'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/export:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-export'

#
# export-importer
#
- id: 'dockerize-export-importer'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/export-importer:${_TAG}'
  - '--build-arg=SERVICE=export-importer'
  - '.'
  waitFor:
  - 'build'

- id: 'push-export-importer'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/export-importer:${_TAG}'
  waitFor:
  - 'dockerize-export-importer'

- id: 'attest-export-importer'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/export-importer:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-export-importer'

#
# exposure
#
- id: 'dockerize-exposure'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/exposure:${_TAG}'
  - '--build-arg=SERVICE=exposure'
  - '.'
  waitFor:
  - 'build'

- id: 'push-exposure'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/exposure:${_TAG}'
  waitFor:
  - 'dockerize-exposure'

- id: 'attest-exposure'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/exposure:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-exposure'

#
# federationin
#
- id: 'dockerize-federationin'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/federationin:${_TAG}'
  - '--build-arg=SERVICE=federationin'
  - '.'
  waitFor:
  - 'build'

- id: 'push-federationin'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/federationin:${_TAG}'
  waitFor:
  - 'dockerize-federationin'

- id: 'attest-federationin'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/federationin:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-federationin'

#
# federationout
#
- id: 'dockerize-federationout'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/federationout:${_TAG}'
  - '--build-arg=SERVICE=federationout'
  - '.'
  waitFor:
  - 'build'

- id: 'push-federationout'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/federationout:${_TAG}'
  waitFor:
  - 'dockerize-federationout'

- id: 'attest-federationout'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/federationout:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-federationout'

#
# generate
#
- id: 'dockerize-generate'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/generate:${_TAG}'
  - '--build-arg=SERVICE=generate'
  - '.'
  waitFor:
  - 'build'

- id: 'push-generate'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/generate:${_TAG}'
  waitFor:
  - 'dockerize-generate'

- id: 'attest-generate'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/generate:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-generate'

#
# key-rotation
#
- id: 'dockerize-key-rotation'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/key-rotation:${_TAG}'
  - '--build-arg=SERVICE=key-rotation'
  - '.'
  waitFor:
  - 'build'

- id: 'push-key-rotation'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/key-rotation:${_TAG}'
  waitFor:
  - 'dockerize-key-rotation'

- id: 'attest-key-rotation'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/key-rotation:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-key-rotation'

#
# metrics-registrar
#
- id: 'dockerize-metrics-registrar'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/metrics-registrar:${_TAG}'
  - '--build-arg=SERVICE=metrics-registrar'
  - '.'
  waitFor:
  - 'build'

- id: 'push-metrics-registrar'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/metrics-registrar:${_TAG}'
  waitFor:
  - 'dockerize-metrics-registrar'

- id: 'attest-metrics-registrar'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/metrics-registrar:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-metrics-registrar'

#
# migrate
#
- id: 'dockerize-migrate'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/migrate.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG}'
  - '.'
  waitFor:
  - 'build'

- id: 'push-migrate'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG}'
  waitFor:
  - 'dockerize-migrate'

- id: 'attest-migrate'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/migrate:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-migrate'

#
# mirror
#
- id: 'dockerize-mirror'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/mirror:${_TAG}'
  - '--build-arg=SERVICE=mirror'
  - '.'
  waitFor:
  - 'build'

- id: 'push-mirror'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/mirror:${_TAG}'
  waitFor:
  - 'dockerize-mirror'

- id: 'attest-mirror'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/mirror:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-mirror'

#
# jwks
#
- id: 'dockerize-jwks'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--file=builders/service.dockerfile'
  - '--tag=gcr.io/${PROJECT_ID}/${_REPO}/jwks:${_TAG}'
  - '--build-arg=SERVICE=jwks'
  - '.'
  waitFor:
  - 'build'

- id: 'push-jwks'
  name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/${PROJECT_ID}/${_REPO}/jwks:${_TAG}'
  waitFor:
  - 'dockerize-jwks'

- id: 'attest-jwks'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:396.0.0'
  args:
  - 'bash'
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    ARTIFACT_URL=$(docker inspect gcr.io/${PROJECT_ID}/${_REPO}/jwks:${_TAG} --format='{{index .RepoDigests 0}}')
    gcloud beta container binauthz attestations sign-and-create \
      --project "${PROJECT_ID}" \
      --artifact-url "$${ARTIFACT_URL}" \
      --attestor "${_BINAUTHZ_ATTESTOR}" \
      --keyversion "${_BINAUTHZ_KEY_VERSION}"
  waitFor:
  - 'push-jwks'
