name: Code Review

on:
  pull_request:
    branches:
    - 'main'

jobs:
  only-user-errors:
    name: errorw-bot
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: reviewdog/action-setup@v1

      - name: Check
        shell: bash
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |-
          set -eEu
          set +o pipefail

          grep --recursive --line-number --exclude-dir=.git --exclude-dir=.github ".Errorw" . |
          reviewdog -efm="%f:%l:%m" \
            -name="errorw-bot" \
            -reporter="github-pr-review" \
            -filter-mode="added" \
            -fail-on-error="false" \
            -level="warning"

  copyright-check:
    name: copyright-check
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: reviewdog/action-setup@v1

      - name: Check
        shell: bash
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |-
          set -eEu
          set +o pipefail

          YEAR=$(date +"%Y")
          find . -type f -name '*.go' -exec awk 'FNR==1{if ($0!~"Copyright '"${YEAR}"'") print FILENAME ":1:missing copyright or invalid copyright year";}' '{}' + | \
          reviewdog -efm="%f:%l:%m" \
            -name="copyright-check" \
            -reporter="github-pr-review" \
            -filter-mode="diff_context" \
            -fail-on-error="true" \
            -level="error"

  zap-logger:
    name: zap-logger
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: reviewdog/action-setup@v1

      - uses: actions/setup-go@v2
        with:
          go-version: '1.15'

      - uses: actions/cache@v2
        with:
          path: |-
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check
        shell: bash
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |-
          set -eEu
          set +o pipefail

          make zapcheck 2>&1 | \
          reviewdog -efm="%f:%l:%c: %m" \
            -name="zap-logger" \
            -reporter="github-pr-review" \
            -filter-mode="diff_context" \
            -fail-on-error="true" \
            -level="error"
